stages:
  - prepare
  - validate
  - build
  - deploy


# include:
#   - local: .gitlab/Base.gitlab-ci.yml 

variables:
  dir: ansible
  TF_ROOT: ${CI_PROJECT_DIR}/$dir  # The relative path to the root directory of the Terraform project
  TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${CI_PROJECT_NAME}
  # TF_STATE_NAME: ${TF_STATE_NAME:-default}  # The name of the state file used by the GitLab Managed Terraform state backend

init:
  stage: prepare
  script:
    - source init.sh


validate:
  stage: validate
  script:
    - source init.sh
    - gitlab-terraform validate

plan:
  stage: build
  script:
    - gitlab-terraform plan
    - gitlab-terraform plan-json
  artifacts:
    name: plan
    paths:
      - ${TF_ROOT}/plan.cache
    reports:
      terraform: ${TF_ROOT}/plan.json

# Separate apply job for manual launching Terraform as it can be destructive
# action.
apply:
  stage: deploy
  environment:
    name: production
  script:
    - gitlab-terraform apply
  dependencies:
    - plan
  when: manual
  only:
    - master


